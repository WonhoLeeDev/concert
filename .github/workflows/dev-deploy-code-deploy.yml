name: dev github actions SCP build file to EC2

on:
  push:
    branches:
      - develop

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository에 올린 파일들 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_DEV_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: gradlew 실행 권한추가, 테스트 및 빌드하기(테스트X)
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: 빌드된 파일 이름 변경
        run: mv ./build/libs/*SNAPSHOT.jar ./concert-booking.jar

      - name: check files
        run: |
          ls
          pwd

      - name: 빌드된 파일 압축하기
        run: tar -czvf $GITHUB_SHA.tar.gz concert-booking.jar appspec.yml scripts

      - name: check compressed file
        run: ls

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: S3에 프로젝트 폴더 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://concert-booking-server/$GITHUB_SHA.tar.gz

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        run: aws deploy create-deployment
          --application-name concert-booking-server
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name Develop
          --s3-location bucket=concert-booking-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz # => s3://concert-booking-server/$GITHUB_SHA.tar.gz