name: dev github actions SCP build file to EC2

on:
  push:
    branches:
      - develop

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository에 올린 파일들 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_DEV_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: gradlew 실행 권한추가, 테스트 및 빌드하기(테스트X)
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: 빌드된 파일 이름 변경
        run: mv ./build/libs/*SNAPSHOT.jar ./concert-booking.jar

      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }} # EC2의 주소
          username: ${{ secrets.EC2_USERNAME }} # EC2 접속 username
          key: ${{ secrets.EC2_PRIVATE_KEY }} # EC2의 Key 파일의 내부 텍스트
          source: concert-booking.jar # 빌드된 파일명
          target: /home/ubuntu/concert-booking-server/tobe # Github action에서 빌드된 파일 EC2에 SCP할 경로

      - name: SSH(원격 접속)로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }} # EC2의 주소
          username: ${{ secrets.EC2_USERNAME }} # EC2 접속 username
          key: ${{ secrets.EC2_PRIVATE_KEY }} # EC2의 Key 파일의 내부 텍스트
          script_stop: true # 아래 script 중 실패하는 명령이 하나라도 있으면 실패로 처리
          script: |
            rm -rf /home/ubuntu/concert-booking-server/current
            mkdir /home/ubuntu/concert-booking-server/current
            mv /home/ubuntu/concert-booking-server/tobe/concert-booking.jar /home/ubuntu/concert-booking-server/current/concert-booking.jar
            cd /home/ubuntu/concert-booking-server/current
            sudo fuser -k -n tcp 8080 || true
            nohub java -jar concert-booking.jar > ./output.log 2>&1 &
            rm -rf /home/ubuntu/concert-booking-server/tobe
